[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "orc"
version = "2.0.0"
description = "Advanced simulation and optimization system for rotary cutters"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "ORC Development Team", email = "orc-dev@example.com"}
]
maintainers = [
    {name = "ORC Development Team", email = "orc-dev@example.com"}
]
keywords = [
    "rotary cutter",
    "optimization",
    "simulation",
    "physics modeling",
    "differential equations",
    "agricultural machinery",
    "engineering",
    "streamlit"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Visualization",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8"
dependencies = [
    "streamlit>=1.28.0",
    "pandas>=2.0.0",
    "plotly>=5.17.0",
    "openpyxl>=3.1.0",
    "scipy>=1.11.0",
    "numpy>=1.24.0",
    "matplotlib>=3.7.0",
    "pyyaml>=6.0.0",
    "python-dotenv>=1.0.0",
    "loguru>=0.7.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
    "notebook>=6.5.0",
    "pre-commit>=3.0.0",
    "build>=0.10.0",
    "twine>=4.0.0"
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0"
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0"
]
performance = [
    "numba>=0.57.0",
    "memory-profiler>=0.60.0",
    "line-profiler>=4.0.0"
]

[project.urls]
Homepage = "https://github.com/orc-team/orc"
Documentation = "https://orc-team.github.io/orc"
Repository = "https://github.com/orc-team/orc.git"
"Bug Tracker" = "https://github.com/orc-team/orc/issues"
Changelog = "https://github.com/orc-team/orc/blob/main/CHANGELOG.md"

[project.scripts]
orc-app = "orc.ui.app:main"
orc-simulate = "orc.cli.simulate:main"
orc-analyze = "orc.cli.analyze:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
orc = [
    "ui/styles/*.css",
    "config/*.yaml",
    "data/examples/*.csv",
    "data/examples/*.xlsx"
]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["orc"]
known_third_party = ["streamlit", "numpy", "pandas", "scipy", "matplotlib", "plotly"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src/orc",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "physics: marks tests related to physics calculations",
    "ui: marks tests related to user interface",
    "performance: marks tests related to performance"
]

# Coverage configuration
[tool.coverage.run]
source = ["src/orc"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
    "*/conftest.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "streamlit.*",
    "plotly.*",
    "scipy.*",
    "matplotlib.*"
]
ignore_missing_imports = true

# Flake8 configuration (in setup.cfg since flake8 doesn't support pyproject.toml yet)
# See setup.cfg for flake8 configuration
